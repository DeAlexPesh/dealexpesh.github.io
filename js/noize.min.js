var NoizeGen = (function() {

  var div, canvas, mCanvas;
  const ACON = audioContextCheck();
  var sndNoize01, sndNoize02, sndGane01, sndGane02;

  function audioContextCheck() {
    if (typeof window.AudioContext !== "undefined") {
      return new window.AudioContext();
    } else if (typeof webkitAudioContext !== "undefined") {
      return new window.webkitAudioContext();
    } else if (typeof window.mozAudioContext !== "undefined") {
      return new window.mozAudioContext();
    } else { return null; }
  };

  function NoizeGen(elId) {
    div = document.getElementById(elId);
    canvas = document.createElement('canvas');
    mCanvas = document.createElement('canvas');
    div.insertBefore(canvas, div.firstChild);
    canvas.width = window.innerWidth>>1;
    canvas.height = window.innerHeight>>1;
    canvas.style.width = '100%';
    canvas.style.height = '100%';
    canvas.style.background = '#000';
  };

  function makeNoizeSnd() {
    sndNoize01 = ACON.createBufferSource();    
    sndGane01 = ACON.createGain();    
    var bufSize01 = 2 * ACON.sampleRate;        
    var bufNoize01 = ACON.createBuffer(1, bufSize01, ACON.sampleRate);    
    var output = bufNoize01.getChannelData(0);
    for (var i = 0; i < bufSize01; i++) { output[i] = (Math.random() * 2 - 1) * 0.11; }
    sndNoize01.buffer = bufNoize01;
    sndNoize01.loop = true;    
    sndNoize01.connect(sndGane01);    
    sndGane01.connect(ACON.destination);
    
    sndNoize02 = ACON.createBufferSource();
    sndGane02 = ACON.createGain();
    var bufSize02 = 2048;
    var bufNoize02 = ACON.createBuffer(1, bufSize02, ACON.sampleRate); 
    var request = new XMLHttpRequest();
    request.open("GET", "sound/sh2.mp3", true);
    request.responseType = "arraybuffer";
    request.onload = function() {
      ACON.decodeAudioData(request.response, function(bufNoize02) {
        sndNoize02.buffer = bufNoize02;
      });
    }
    request.send();
    sndNoize02.loop = true;
    sndNoize02.connect(sndGane02);
    sndGane02.connect(ACON.destination);
  };

  function makeNoizePic() {
    var ctx = canvas.getContext('2d', {alpha: false});
    var idata = mCanvas.getContext('2d', {alpha: false}).createImageData(canvas.width, canvas.height);
    var pix = new Uint32Array(idata.data.buffer);
    var len = pix.length - 1;
    while(len--) { pix[len] = Math.random() < 0.5 ? 0 : -1>>0; }
    ctx.putImageData(idata, 0, 0);
  };

  var loopId = null;

  NoizeGen.prototype.start = function (fps, volume) {
    fps = typeof fps !== 'undefined' ?  fps : 30;
    volume = typeof volume !== 'undefined' ?  volume : 1.0;
    if ('null' != loopId) {
      loopId = setInterval(makeNoizePic, 1000 / fps);
      if (!!ACON) {
        makeNoizeSnd();
        sndGane01.gain.value = volume;
        sndNoize01.start(0.1);
        sndGane02.gain.value = volume;
        sndNoize02.start(0.1);
      }
    }
    return this;
  };

  NoizeGen.prototype.stop = function (closeTime) {
    closeTime = typeof closeTime !== 'undefined' ?  closeTime : 0.3;
    if (!!loopId) {
      if (!!ACON) {
        sndGane01.gain.exponentialRampToValueAtTime(0.01, ACON.currentTime + closeTime);        
        sndNoize01.stop(closeTime);
        sndGane02.gain.exponentialRampToValueAtTime(0.01, ACON.currentTime + closeTime);        
        sndNoize02.stop(closeTime);
      }
      clearInterval(loopId);
      loopId = null;
      canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);
    }
    return this;
  };

  return NoizeGen;
})();
