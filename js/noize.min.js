var NoizeGen = (function() {

  var div, canvas, mCanvas;
  const ACON = audioContextCheck();
  var sndNoize, sndGane;

  function audioContextCheck() {
    if (typeof window.AudioContext !== "undefined") {
      return new window.AudioContext();
    } else if (typeof webkitAudioContext !== "undefined") {
      return new window.webkitAudioContext();
    } else if (typeof window.mozAudioContext !== "undefined") {
      return new window.mozAudioContext();
    } else { return null; }
  };

  function NoizeGen(elId) {
    div = document.getElementById(elId);
    canvas = document.createElement('canvas');
    mCanvas = document.createElement('canvas');
    div.insertBefore(canvas, div.firstChild);
    canvas.width = window.innerWidth>>1;
    canvas.height = window.innerHeight>>1;
    canvas.style.width = '100%';
    canvas.style.height = '100%';
    canvas.style.background = '#000';
  };

  function makeNoizeSnd() {
    sndNoize = ACON.createBufferSource();
    sndGane = ACON.createGain();
    var bufSize = 2 * ACON.sampleRate;
    var bufNoize = ACON.createBuffer(1, bufSize, ACON.sampleRate);
    var output = bufNoize.getChannelData(0);
    for (var i = 0; i < bufSize; i++) { output[i] = (Math.random() * 2 - 1) * 0.11; }
    sndNoize.buffer = bufNoize;
    sndNoize.loop = true;
    sndNoize.connect(sndGane);
    sndGane.connect(ACON.destination);
  };

  function makeNoizePic() {
    var ctx = canvas.getContext('2d', {alpha: false});
    var idata = mCanvas.getContext('2d', {alpha: false}).createImageData(canvas.width, canvas.height);
    var pix = new Uint32Array(idata.data.buffer);
    var len = pix.length - 1;
    while(len--) { pix[len] = Math.random() < 0.5 ? 0 : -1>>0; }
    ctx.putImageData(idata, 0, 0);
  };

  var loopId = null;

  NoizeGen.prototype.start = function (fps, volume) {
    fps = typeof fps !== 'undefined' ?  fps : 30;
    volume = typeof volume !== 'undefined' ?  volume : 1.0;
    if ('null' != loopId) {
      loopId = setInterval(makeNoizePic, 1000 / fps);
      if (!!ACON) {
        makeNoizeSnd();
        sndGane.gain.value = volume;
        sndNoize.start(0.1);
      }
    }
    return this;
  };

  NoizeGen.prototype.stop = function (closeTime) {
    closeTime = typeof closeTime !== 'undefined' ?  closeTime : 0.3;
    if (!!loopId) {
      if (!!ACON) {
        sndGane.gain.exponentialRampToValueAtTime(0.01, ACON.currentTime + closeTime);        
        sndNoize.stop(closeTime);
      }
      clearInterval(loopId);
      loopId = null;
      canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);
    }
    return this;
  };

  return NoizeGen;
})();
